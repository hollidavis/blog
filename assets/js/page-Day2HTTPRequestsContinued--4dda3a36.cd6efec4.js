(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{501:function(e,t,s){"use strict";s.r(t);var a=s(2),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"day-2-http-requests-continued"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-2-http-requests-continued"}},[e._v("#")]),e._v(" Day 2 | HTTP Requests Continued")]),e._v(" "),s("h2",{attrs:{id:"afternoon-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#afternoon-code"}},[e._v("#")]),e._v(" Afternoon Code")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/hollidavis/gregslist-mvc/tree/SandboxAPI",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gregslist with API"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"daily-journal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#daily-journal"}},[e._v("#")]),e._v(" Daily Journal:")]),e._v(" "),s("p",[s("strong",[e._v("What are the three states of a Promise?")])]),e._v(" "),s("ul",[s("li",[e._v("Pending: Initial State, before the Promise succeeds or fails")]),e._v(" "),s("li",[e._v("Resolved: Completed Promise")]),e._v(" "),s("li",[e._v("Rejected: Failed Promise")])]),e._v(" "),s("p",[s("strong",[e._v('How do promises seek to resolve the issues of "callback hell"?')])]),e._v(" "),s("ul",[s("li",[e._v("A promise has 2 possible outcomes: it will either be kept when the time comes, or it won't. This helps to prevent \"callback hell\" to ensure that code will never be stuck, it'll always move forward.")])]),e._v(" "),s("p",[s("strong",[e._v("What is the difference between .then() and .catch()?")])]),e._v(" "),s("ul",[s("li",[e._v("Then() is used to dictate what happens after a promise is successful while catch() is used to dictate what should happen if a promise fails.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);